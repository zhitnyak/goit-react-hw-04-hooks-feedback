{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notoficatin.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","el","idx","className","css","btn","onClick","type","Section","title","children","box","Statistics","good","neutral","bad","total","positivePercentage","content","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","res","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,QAAU,8B,mBCA5BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,IAAM,uB,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,+B,+JCoBbC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAACC,EAAIC,GAAL,OACV,cAAC,WAAD,UACE,wBACEC,UAAWC,IAAIC,IACfC,QAAS,kBAAMP,EAAgBE,IAC/BM,KAAK,SAHP,SAKGN,KANUC,O,gBCOJM,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASP,UAAWC,IAAIO,IAAxB,UACE,6BAAKF,IACJC,M,gBCYUE,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGd,UAAWC,IAAIc,QAAlB,mBAAkCL,KAClC,oBAAGV,UAAWC,IAAIc,QAAlB,sBAAqCJ,KACrC,oBAAGX,UAAWC,IAAIc,QAAlB,kBAAiCH,KACjC,oBAAGZ,UAAWC,IAAIc,QAAlB,oBAAmCF,KACnC,oBAAGb,UAAWC,IAAIc,QAAlB,gCAA+CD,S,gBCJpCE,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGjB,UAAWC,IAAIgB,QAAlB,SAA4BA,KC+DnDC,MA3Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GA2B1B,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBArBkB,SAACD,GACzB,OAAQA,GACN,IAAK,OACHyB,EAAQV,EAAO,GACf,MACF,IAAK,UACHW,EAAWV,EAAU,GACrB,MACF,IAAK,MACHW,EAAOV,EAAM,GACb,MACF,QACE,aAaF,cAAC,EAAD,CAASN,MAAM,aAAf,SACIiB,IAGA,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBA1C8B,WACtC,IAAMU,EAAMC,KAAKC,MAAOhB,EAAOa,IAAwB,KACvD,OAAKC,GACI,EAuCmBG,KAPtB,cAAC,EAAD,CAAcV,QAAQ,+BC9ChCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f14e3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Statistics_content__18Dxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1C3Md\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Section_box__10yzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notoficatin_message__1VCqk\"};","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport css from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map((el, idx) => (\n    <Fragment key={idx}>\n      <button\n        className={css.btn}\n        onClick={() => onLeaveFeedback(el)}\n        type=\"button\"\n      >\n        {el}\n      </button>\n    </Fragment>\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport css from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={css.box}>\n    <h1>{title}</h1>\n    {children}\n  </section>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <p className={css.content}>Good: {good}</p>\n    <p className={css.content}>Neutral: {neutral}</p>\n    <p className={css.content}>Bad: {bad}</p>\n    <p className={css.content}>Total: {total}</p>\n    <p className={css.content}>Positive feedback: {positivePercentage}</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport css from './Notoficatin.module.css';\n\nconst Notification = ({ message }) => <p className={css.message}>{message}</p>;\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const res = Math.round((good / countTotalFeedback()) * 100);\n    if (!res) {\n      return 0;\n    }\n    return res;\n  };\n\n  const handleButtonClick = (options) => {\n    switch (options) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={handleButtonClick}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {!countTotalFeedback() ? (\n          <Notification message=\"There is no feedback\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}